// <auto-generated />
using System;
using FlightSchedule.model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FlightSchedule.Migrations
{
    [DbContext(typeof(FlightScheduleContext))]
    [Migration("20230615111931_adddeprurValue")]
    partial class adddeprurValue
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FlightSchedule.model.FlightScheduleContext+flight", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("airline_id")
                        .HasColumnType("int");

                    b.Property<string>("arrival_time")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("departureValue")
                        .HasColumnType("int");

                    b.Property<string>("departure_time")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("flight_id")
                        .HasColumnType("int");

                    b.Property<int>("route_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("flights");
                });

            modelBuilder.Entity("FlightSchedule.model.FlightScheduleContext+route", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("departure_date")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("destination_city_id")
                        .HasColumnType("int");

                    b.Property<int?>("flightid")
                        .HasColumnType("int");

                    b.Property<int>("origin_city_id")
                        .HasColumnType("int");

                    b.Property<int>("route_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("flightid");

                    b.ToTable("routes");
                });

            modelBuilder.Entity("FlightSchedule.model.FlightScheduleContext+subscription", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("agency_id")
                        .HasColumnType("int");

                    b.Property<int>("destination_city_id")
                        .HasColumnType("int");

                    b.Property<int>("origin_city_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("subscriptions");
                });

            modelBuilder.Entity("FlightSchedule.model.FlightScheduleContext+route", b =>
                {
                    b.HasOne("FlightSchedule.model.FlightScheduleContext+flight", null)
                        .WithMany("routes")
                        .HasForeignKey("flightid");
                });

            modelBuilder.Entity("FlightSchedule.model.FlightScheduleContext+flight", b =>
                {
                    b.Navigation("routes");
                });
#pragma warning restore 612, 618
        }
    }
}
